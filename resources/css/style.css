*, *::before, *::after{
    margin:0;
    padding:0;
    box-sizing: border-box;
}
html{
    font-size: 16px;
    font-family: Helvetica;
}
:root {
    --bar-width: 60px;
    --bar-height: 8px;
    --hamburger-gap: 6px;
    --foreground: #3D368C;
    --background: white;
    --hamburger-margin: 8px;
    --animation-timing: 200ms ease-in-out;
    --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
    --x-width: calc(var(--bar-height)*3 + var(--hamburger-gap)*2);
  }


/* General Container Syles */
header{
    width: 100%;
    margin: 0 auto; /*Center align */
}
/* header */
header{
    display: flex;
    align-items: center;
    height: 7.5rem;
    justify-content: space-between;
    border-bottom-style: solid;
    border-color: #3D368C;
}

.headerLeft{
    display: flex;
    max-height: 100%;
    max-width: 17%;
}
.headerLeft img{
    max-width: 100%; 
    max-height: 100%; 
    object-fit: contain; /*To make sure the object maintains aspect ration*/
} 
.headerMiddle{
    display: flex;
    max-height: 100%;
    max-width: 100%;
    border: 2px solid yellow;
}
.headerMiddle img{
    max-width: 100%; 
    max-height: 100%; 
    object-fit: contain; /*To make sure the object maintains aspect ration*/
}
.headerRightDesktop ul{
    display: flex;
    gap: 1.5rem; /*To add spacing between elements*/
    list-style-type: none;
    margin-right: 2rem;
    margin-top: 2rem;
}
.headerRightDesktop ul li a{
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    color: #3D368C;
}
.headerRightMobile{
    display: none;
}



/* Mobile */
@media only screen and (max-width: 750px){/*600px*/
    /* Header */
    .headerRightDesktop{
        display: none
    }
    .headerRightMobile{
        display: flex;
        flex-direction: column;
    }
    /*Sidebar stuff*/
    .sidebar{
        position: fixed;
        top: 7.5rem;
        left: 0;
        width: 100vw;
        height: calc(100vh - 7.5rem); 
        background-color: #3D368C;
        display: none;
        z-index:1;
        /*center content*/
        flex-direction: column;
        align-items: center;
        justify-content: center;

    }
    .sidebar nav {
        display: flex;
        flex-direction: column;
        gap: 3rem; /* Adjusts vertical spacing between items */
    }
    .sidebar nav div a{
        text-decoration: none; /*removes the underline */
        font-size: 3.5rem;
        color: white;
    }
    /*To make sidebar appear*/
    .headerRightMobile label:has(input[type="checkbox"]:checked) ~ .sidebar {
        display: flex; /* Show the sidebar when the checkbox is checked */
    }
   /*Hamburger Menu stuff*/
   .hamburger-menu{
    display: flex;
    flex-direction: column;
    gap: var(--hamburger-gap);
    width: max-content;
    z-index: 2;
    cursor: pointer;
    position: relative;
   }
   .hamburger-menu input[type="checkbox"]{
    cursor: pointer;
   }
   
   .hamburger-menu:has(input:checked){/*Change variables when checkbox is checked*/
    --foreground: green;
    --background: pink;
   }
   /*mainly when navigating via keyboard*/
   .hamburger-menu:has(input:focus-visible)::before,
   .hamburger-menu:has(input:focus-visible)::after,
   .hamburger-menu input:focus-visible{
    border: 1px solid var(--background);
    box-shadow: 0 0 0 1px var(--foreground);
   }
   /*static top and bottom bars*/
   .hamburger-menu::before,
   .hamburger-menu::after,
   .hamburger-menu input{
    content: "";
    width: var(--bar-width);
    height: var(--bar-height);
    background-color: var(--foreground);
    border-radius: 9999px;
    transform-origin: left center;
    transition: opacity var(--animation-timing),
        width var(--animation-timing),
        rotate var(--animation-timing),
        translate var(--animation-timing),
        background-color var(--animation-timing);
   }
   /*static middle bar*/
   .hamburger-menu input{
    appearance: none;
    padding: 0;
    margin: 0;
    outline: none;
    pointer-events: none;
   }
   /*creating the x effect*/
   .hamburger-menu:has(input:checked)::before{
    rotate: 45deg;
    width: var(--x-width);
    translate:0 calc(var(--bar-height)/-2);
   }
   .hamburger-menu:has(input:checked)::after{
    rotate: -45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height)/2);
   }
   .hamburger-menu input:checked{
    opacity: 0;
    width:0;
   }



}